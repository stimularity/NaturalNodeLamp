{
  "name": "suncalc",
  "version": "1.2.1",
  "description": "A tiny JavaScript library for calculating sun/moon positions and phases.",
  "homepage": "https://github.com/mourner/suncalc",
  "keywords": [
    "sun",
    "astronomy",
    "math",
    "calculation",
    "sunrise",
    "sunset",
    "twilight",
    "moon",
    "illumination"
  ],
  "author": {
    "name": "Vladimir Agafonkin"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mourner/suncalc.git"
  },
  "main": "suncalc.js",
  "readme": "\nSunCalc\n=======\n\nSunCalc is a tiny BSD-licensed JavaScript library for calculating sun position,\nsunlight phases (times for sunrise, sunset, dusk, etc.),\nmoon position and lunar phase for the given location and time,\ncreated by [Vladimir Agafonkin](http://agafonkin.com/en) ([@mourner](https://github.com/mourner))\nas a part of the [SunCalc.net project](http://suncalc.net).\n\nMost calculations are based on the formulas given in the excellent Astronomy Answers articles\nabout [position of the sun](http://aa.quae.nl/en/reken/zonpositie.html)\nand [the planets](http://aa.quae.nl/en/reken/hemelpositie.html).\nYou can read about different twilight phases calculated by SunCalc\nin the [Twilight article on Wikipedia](http://en.wikipedia.org/wiki/Twilight).\n\n\n## Usage example\n\n```javascript\n// get today's sunlight times for London\nvar times = SunCalc.getTimes(new Date(), 51.5, -0.1);\n\n// format sunrise time from the Date object\nvar sunriseStr = times.sunrise.getHours() + ':' + times.sunrise.getMinutes();\n\n// get position of the sun (azimuth and altitude) at today's sunrise\nvar sunrisePos = SunCalc.getPosition(times.sunrise, 51.5, -0.1);\n\n// get sunrise azimuth in degrees\nvar sunriseAzimuth = sunrisePos.azimuth * 180 / Math.PI;\n```\n\n\n## Using in a server environment\n\nIn addition to browsers, SunCalc can be used in server environments like Node,\nand is available as an NPM package (`npm install suncalc`).\n\n```js\nvar SunCalc = require('suncalc');\n```\n\n\n## Reference\n\n### Sunlight times\n\n```javascript\nSunCalc.getTimes(/*Date*/ date, /*Number*/ latitude, /*Number*/ longitude)\n```\n\nReturns an object with the following properties (each is a `Date` object):\n\n * `sunrise`: sunrise (top edge of the sun appears on the horizon)\n * `sunriseEnd`: sunrise ends (bottom edge of the sun touches the horizon)\n * `goldenHourEnd`: morning golden hour (soft light, best time for photography) ends\n * `solarNoon`: solar noon (sun is in the highest position)\n * `goldenHour`: evening golden hour starts\n * `sunsetStart`: sunset starts (bottom edge of the sun touches the horizon)\n * `sunset`: sunset (sun disappears below the horizon, evening civil twilight starts)\n * `dusk`: dusk (evening nautical twilight starts)\n * `nauticalDusk`: nautical dusk (evening astronomical twilight starts)\n * `night`: night starts (dark enough for astronomical observations)\n * `nightEnd`: night ends (morning astronomical twilight starts)\n * `nauticalDawn`: nautical dawn (morning nautical twilight starts)\n * `dawn`: dawn (morning nautical twilight ends, morning civil twilight starts)\n * `nadir`: nadir (darkest moment of the night, sun is in the lowest position)\n\n```javascript\nSunCalc.addTime(/*Number*/ angleInDegrees, /*String*/ morningName, /*String*/ eveningName)\n```\n\nAdds a custom time when the sun reaches the given angle to results returned by `SunCalc.getTimes`.\n\n\n### Sun position\n\n```javascript\nSunCalc.getPosition(/*Date*/ timeAndDate, /*Number*/ latitude, /*Number*/ longitude)\n```\n\nReturns an object with the following properties:\n\n * `altitude`: sun altitude above the horizon in radians, e.g. `0` at the horizon and `PI/2` at the zenith (straight over your head)\n * `azimuth`: sun azimuth in radians (direction along the horizon, measured from south to west), e.g. `0` is south and `Math.PI * 3/4` is northwest\n\n\n### Moon position\n\n```javascript\nSunCalc.getMoonPosition(/*Date*/ timeAndDate, /*Number*/ latitude, /*Number*/ longitude)\n```\n\nReturns an object with the following properties:\n\n * `altitude`: moon altitude above the horizon in radians\n * `azimuth`: moon azimuth in radians\n * `distance`: distance to moon in kilometers\n\n\n### Moon illumination\n\n```javascript\nSunCalc.getMoonFraction(/*Date*/ timeAndDate)\n```\n\nReturns the illuminated fraction of the moon; varies from `0.0` (new moon) to `1.0` (full moon).\n",
  "readmeFilename": "README.md",
  "_id": "suncalc@1.2.1",
  "dist": {
    "shasum": "99987531544ed7ba5b3c42bb3640613b31f7f773"
  },
  "_from": "suncalc@",
  "_resolved": "https://registry.npmjs.org/suncalc/-/suncalc-1.2.1.tgz"
}
